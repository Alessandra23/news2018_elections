stopWords <- c(stopWords, addWords)
# create list of english and portuguese stop words
my_stop_words <- stop_words %>%
select(-lexicon) %>%
bind_rows(data.frame(word = stopWords))
# remove stop words from data
all_words_interesting <- text %>%
anti_join(my_stop_words)
all_words_interesting
text
# remove stop words from data
all_words_interesting <- text %>%
anti_join(my_stop_words)
docs <- Corpus(VectorSource(text))
docs
# get data ready for word cloud
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix), decreasing = TRUE)
df <- data.frame(word = names(words), freq = words)
rownames(df) <- NULL
head(df)
# remove stop words from data
bbc_words_interesting <- df %>%
anti_join(my_stop_words)
bbc_words_interesting
# remove stop words from data
all_words_interesting <- df %>%
anti_join(my_stop_words)
all_words_interesting
# plot
plotTweet <- all_words_interesting %>%
group_by(word) %>%
tally(sort = TRUE) %>%
slice(1:25)
plotTweet
# plot
plotall <- all_words_interesting %>%
group_by(word) %>%
tally(sort = TRUE) %>%
slice(1:25)
p <- ggplot(plotall, aes(x = reorder(word, n, function(n) n), y = n)) +
geom_col(aes(fill = n)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
all_words_interesting
# remove stop words from data
all_words_interesting <- df %>%
anti_join(my_stop_words)
all_words_interesting
# plot
plotall <- all_words_interesting %>%
group_by(word) %>%
tally(sort = TRUE) %>%
slice(1:25)
plotall
df
p <- ggplot(all_words_interesting, aes(x = reorder(word, n, function(n) n), y = n)) +
geom_col(aes(fill = n)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
all_words_interesting %>% head()
p <- ggplot(all_words_interesting, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
all_words_interesting %>% head()
ggplot(all_words_interesting, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq))
p <- ggplot(plotTweet, aes(x = reorder(word, n, function(n) n), y = n)) +
geom_col(aes(fill = n)) +
scale_fill_gradientn(colors = pal) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5)) +
guides(fill = guide_colorbar(frame.colour = "gray", frame.linewidth = 1.5))
p <- p + labs(fill = "Word\nfrequency")
p
# remove stop words from data
tweet_words_interesting <- tweet_words %>%
anti_join(my_stop_words)
# plot
plotTweet <- tweet_words_interesting %>%
group_by(word) %>%
tally(sort = TRUE) %>%
slice(1:25)
p <- ggplot(plotTweet, aes(x = reorder(word, n, function(n) n), y = n)) +
geom_col(aes(fill = n)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
p <- ggplot(all_words_interesting, aes(x = freq, y = word)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
plotall <- all_words_interesting %>%
group_by(word) %>%
slice(1:25)
plotall <- all_words_interesting %>%
group_by(word) %>%
slice(1:25)
plotall
all_words_interesting
plotall <- all_words_interesting %>%
slice(1:25)
plotall
p <- ggplot(plotall, aes(x = freq, y = word)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
p <- ggplot(plotall, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
# analyse the sentiment of the words used
bing_lex <- get_sentiments("nrc")
fn_sentiment <- all_words_interesting %>%
left_join(bing_lex)
sentiments <- fn_sentiment %>%
filter(!is.na(sentiment)) %>%
group_by(sentiment) %>%
summarise(n = n())
# plot sentiment
p <- ggplot(sentiments, aes(x = reorder(sentiment, n, function(n) n), y = n)) +
geom_col(aes(fill = n)) +
scale_fill_gradientn(
colors = pal,
name = "Sentiment",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "Sentiment") +
theme_minimal() +
xlab("Sentiment") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
p <- ggplot(plotall, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
# use portuguese language
stopWords <- stopwords("pt")
# add some more stop words
addWords <- c(
"https", "t.co", "rt", "amp", "to",
"in", "1", "a", "1.98", "100", "é", "2", "skui2ubiss",
"skui2tu7ts", "19", "curtir", "responder", "pra", "pas", "nao", "aqui" , "ainda"
)
stopWords <- c(stopWords, addWords)
# create list of english and portuguese stop words
my_stop_words <- stop_words %>%
select(-lexicon) %>%
bind_rows(data.frame(word = stopWords))
docs <- Corpus(VectorSource(text))
# get data ready for word cloud
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix), decreasing = TRUE)
df <- data.frame(word = names(words), freq = words)
rownames(df) <- NULL
head(df)
# remove stop words from data
all_words_interesting <- df %>%
anti_join(my_stop_words)
all_words_interesting %>% head()
# plot
plotall <- all_words_interesting %>%
group_by(word) %>%
tally(sort = TRUE) %>%
slice(1:25)
plotall <- all_words_interesting %>%
slice(1:25)
p <- ggplot(plotall, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
# add some more stop words
addWords <- c(
"https", "t.co", "rt", "amp", "to",
"in", "1", "a", "1.98", "100", "é", "2", "skui2ubiss",
"skui2tu7ts", "19", "curtir", "responder", "pra", "pas", "nao", "aqui" , "ainda",
"vou", "voc", "tcurtir", "vai"
)
stopWords <- c(stopWords, addWords)
# create list of english and portuguese stop words
my_stop_words <- stop_words %>%
select(-lexicon) %>%
bind_rows(data.frame(word = stopWords))
docs <- Corpus(VectorSource(text))
# get data ready for word cloud
dtm <- TermDocumentMatrix(docs)
matrix <- as.matrix(dtm)
words <- sort(rowSums(matrix), decreasing = TRUE)
df <- data.frame(word = names(words), freq = words)
rownames(df) <- NULL
head(df)
# remove stop words from data
all_words_interesting <- df %>%
anti_join(my_stop_words)
all_words_interesting %>% head()
# plot
plotall <- all_words_interesting %>%
group_by(word) %>%
tally(sort = TRUE) %>%
slice(1:25)
plotall <- all_words_interesting %>%
slice(1:25)
p <- ggplot(plotall, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Word\nfrequency",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "#brasil tweets") +
theme_minimal() +
xlab("words") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
p <- ggplot(plotall, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Frequência da\palavra",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "Notícias sobre as eleições 2018") +
theme_minimal() +
xlab("Palavras") +
ylab("Frequência") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
p <- ggplot(plotall, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Frequência da palavra",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "Notícias sobre as eleições 2018") +
theme_minimal() +
xlab("Palavras") +
ylab("Frequência") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
p <- ggplot(plotall, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Frequência/ da palavra",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "Notícias sobre as eleições 2018") +
theme_minimal() +
xlab("Palavras") +
ylab("Frequência") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
p <- ggplot(plotall, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Frequência\ da palavra",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "Notícias sobre as eleições 2018") +
theme_minimal() +
xlab("Palavras") +
ylab("Frequência") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
p <- ggplot(plotall, aes(x = reorder(word, freq, function(n) n), y = freq)) +
geom_col(aes(fill = freq)) +
scale_fill_gradientn(
colors = pal,
name = "Frequência\nda palavra",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "Notícias sobre as eleições 2018") +
theme_minimal() +
xlab("Palavras") +
ylab("Frequência") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
# analyse the sentiment of the words used
bing_lex <- get_sentiments("nrc")
fn_sentiment <- all_words_interesting %>%
left_join(bing_lex)
sentiments <- fn_sentiment %>%
filter(!is.na(sentiment)) %>%
group_by(sentiment) %>%
summarise(n = n())
# plot sentiment
p <- ggplot(sentiments, aes(x = reorder(sentiment, n, function(n) n), y = n)) +
geom_col(aes(fill = n)) +
scale_fill_gradientn(
colors = pal,
name = "Sentiment",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "Sentiment") +
theme_minimal() +
xlab("Sentiment") +
ylab("Frequency") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
# plot sentiment
p <- ggplot(sentiments, aes(x = reorder(sentiment, n, function(n) n), y = n)) +
geom_col(aes(fill = n)) +
scale_fill_gradientn(
colors = pal,
name = "Sentimento",
guide = guide_colorbar(
frame.colour = "black",
frame.linewidth = 1,
ticks.colour = "black",
ticks.linewidth = 1,
)
) +
ggtitle(label = "Sentimento") +
theme_minimal() +
xlab("Sentimento") +
ylab("Frequência") +
coord_flip() +
theme(axis.title.y = element_text(angle = 90, vjust = 0.5))
p
